spring.application.name=passenger-service
server.port=8081

spring.profiles.default=dev

spring.jpa.properties.hibernate.connection.driver_class = com.mysql.jdbc.Driver
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.open-in-view=false

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.kafka.consumer.bootstrap-servers=${KAFKA_URL:localhost:9092}
spring.kafka.consumer.topic-passenger-rate=passenger-rate
spring.kafka.consumer.group-id=passenger-group
spring.kafka.consumer.auto-offset-reset=earliest

springdoc.api-docs.path=/api/v1/passengers/api-docs
springdoc.swagger-ui.path=/api/v1/passengers/swagger-ui.html

eureka.client.service-url.defaultZone=${EUREKA_SERVICE_URL:http://localhost:8761/eureka/}

passenger-service.max-page-limit=${PAGE_RESPONSE_LIMIT_SIZE:50}

management.endpoints.web.exposure.include[0]=health
management.endpoints.web.exposure.include[1]=prometheus
management.zipkin.tracing.endpoint=${ZIPKIN_URL:http://localhost:9411/api/v2/spans}
management.tracing.sampling.probability=1.0
management.metrics.enable.kafka=true
management.metrics.enable.kafka.consumer=true

#spring.kafka.producer.properties.interceptor.classes="io.opentelemetry.instrumentation.kafkaclients.v2_6.TracingProducerInterceptor"
#spring.kafka.consumer.properties.interceptor.classes="io.opentelemetry.instrumentation.kafkaclients.v2_6.TracingConsumerInterceptor"
